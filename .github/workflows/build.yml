name: Build and Security Scan

on:
  push:
    branches:
      - main

jobs:
  build_and_scan:
    name: Build and SonarQube Analysis
    runs-on: ibrahim
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Execute SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  vulnerability_scan:
    name: Snyk Security Scan
    runs-on: ibrahim
    needs: build_and_scan
    steps:
      - uses: actions/checkout@v2
      - name: Snyk Vulnerability Check
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
      - name: Install Dependencies
        run: npm install

  docker_operations:
    name: Docker Build and Push
    runs-on: ibrahim
    needs: vulnerability_scan
    steps:
      - uses: actions/checkout@v2
      - name: Docker Authentication
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        run: |
          docker build -t myntra .
          docker tag myntra jall1985/myntra:latest
          docker push jall1985/myntra:latest

  deployment:
    name: Deploy Application
    needs: docker_operations
    runs-on: ibrahim
    steps:
      - name: Retrieve Docker Image
        run: docker pull jall1985/myntra:latest
      - name: Start Docker Container
        run: docker run -d --name app -p 3000:3000 jall1985/myntra:latest
      - name: Configure Kubernetes
        run: aws eks --region us-east-1 update-kubeconfig --name EKS_CLOUD
      - name: Kubernetes Deployment
        run: kubectl apply -f deployment-service.yml

  report_generation:
    name: Generate Report
    runs-on: ibrahim
    needs: deployment
    steps:
      - uses: actions/checkout@v2
      - name: Create Report File
        run: |
          echo "Build and Security Scan Report" > report.txt
          echo "==============================" >> report.txt
          echo "Date: $(date)" >> report.txt

      - name: Store Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: security-report
          path: report.txt

  notification:
    name: Notification Service
    runs-on: ibrahim
    needs: report_generation
    steps:
      - name: Retrieve Report
        uses: actions/download-artifact@v2
        with:
          name: security-report
      - name: Email Notification
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USER }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: CI Build and Security Scan Report
          body: The build and security scan is complete. Report is attached.
          to: devops4577@gmail.com
          from: GitHub Actions <devops4577@gmail.com>
          secure: true
          attachment: report.txt
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel-id: '#new-github-action'
          slack-message: "Build and security scan completed. Report is attached."
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
